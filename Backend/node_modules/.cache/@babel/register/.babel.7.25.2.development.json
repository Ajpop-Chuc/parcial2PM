{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\MANUEL\\\\Desktop\\\\Ajpop\\\\8vo Semestre\\\\Progra Comercial\\\\crudFactory\\\\producto-crud-mvc-api\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\MANUEL\\\\Desktop\\\\Ajpop\\\\8vo Semestre\\\\Progra Comercial\\\\crudFactory\\\\producto-crud-mvc-api\",\"filename\":\"C:\\\\Users\\\\MANUEL\\\\Desktop\\\\Ajpop\\\\8vo Semestre\\\\Progra Comercial\\\\crudFactory\\\\producto-crud-mvc-api\\\\test\\\\productoController.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\MANUEL\\\\Desktop\\\\Ajpop\\\\8vo Semestre\\\\Progra Comercial\\\\crudFactory\\\\producto-crud-mvc-api\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.25.2:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _chai = _interopRequireDefault(require(\"chai\"));\nvar _sinon = _interopRequireDefault(require(\"sinon\"));\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\nvar _app = _interopRequireDefault(require(\"../app\"));\nvar _productoController = _interopRequireDefault(require(\"../src/controllers/productoController\"));\nvar _productoModel = _interopRequireDefault(require(\"../src/models/productoModel\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { \"default\": e }; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; } // Asegúrate de que apunta a tu app de Express\nvar expect = _chai[\"default\"].expect; // Esta es la forma correcta de desestructurar 'expect'\n\n_chai[\"default\"].use(_chaiHttp[\"default\"]); // Asegúrate de usar chaiHttp si estás haciendo pruebas HTTP\n\ndescribe('Producto Controller', function () {\n  var req, res, next;\n  beforeEach(function () {\n    req = {\n      body: {},\n      params: {}\n    };\n    res = {\n      status: _sinon[\"default\"].stub().returnsThis(),\n      json: _sinon[\"default\"].stub().returnsThis(),\n      send: _sinon[\"default\"].stub().returnsThis()\n    };\n    next = _sinon[\"default\"].spy();\n  });\n\n  // Test para el método \"crearProducto\"\n  describe('crearProducto', function () {\n    it('debería crear un producto correctamente', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var mockProducto, stubCrearProducto;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            mockProducto = {\n              id: 1,\n              nombre: 'Producto Test'\n            };\n            stubCrearProducto = _sinon[\"default\"].stub(_productoModel[\"default\"], 'crearProducto').resolves(mockProducto);\n            req.body = {\n              nombre: 'Producto Test',\n              descripcion: 'Desc Test'\n            }; // Cambiar según los datos esperados\n            _context.next = 5;\n            return _productoController[\"default\"].crearProducto(req, res, next);\n          case 5:\n            expect(stubCrearProducto.calledOnce).to.be[\"true\"];\n            expect(res.status.calledWith(201)).to.be[\"true\"];\n            expect(res.json.calledWith({\n              producto: mockProducto,\n              mensaje: 'Producto creado exitosamente'\n            })).to.be[\"true\"];\n            stubCrearProducto.restore();\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    it('debería manejar errores al crear un producto', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var stubCrearProducto;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            stubCrearProducto = _sinon[\"default\"].stub(_productoModel[\"default\"], 'crearProducto').rejects(new Error('Error de base de datos'));\n            _context2.next = 3;\n            return _productoController[\"default\"].crearProducto(req, res, next);\n          case 3:\n            expect(res.status.calledWith(500)).to.be[\"true\"];\n            expect(res.json.calledWith({\n              mensaje: 'Error al crear el producto'\n            })).to.be[\"true\"];\n            stubCrearProducto.restore();\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    })));\n  });\n\n  // Test para el método \"obtenerProducto\"\n  describe('obtenerProducto', function () {\n    it('debería obtener un producto correctamente', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var mockProducto, stubObtenerProducto;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            mockProducto = {\n              id: 1,\n              nombre: 'Producto Test'\n            };\n            stubObtenerProducto = _sinon[\"default\"].stub(_productoModel[\"default\"], 'obtenerProducto').resolves(mockProducto);\n            req.params.id = 1;\n            _context3.next = 5;\n            return _productoController[\"default\"].obtenerProducto(req, res, next);\n          case 5:\n            expect(stubObtenerProducto.calledOnce).to.be[\"true\"];\n            expect(res.json.calledWith(mockProducto)).to.be[\"true\"];\n            stubObtenerProducto.restore();\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    })));\n    it('debería manejar producto no encontrado', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var stubObtenerProducto;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            stubObtenerProducto = _sinon[\"default\"].stub(_productoModel[\"default\"], 'obtenerProducto').resolves(null);\n            req.params.id = 999;\n            _context4.next = 4;\n            return _productoController[\"default\"].obtenerProducto(req, res, next);\n          case 4:\n            expect(res.status.calledWith(404)).to.be[\"true\"];\n            expect(res.json.calledWith({\n              mensaje: 'Producto no encontrado'\n            })).to.be[\"true\"];\n            stubObtenerProducto.restore();\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    })));\n  });\n\n  // Test para el método \"actualizarProducto\"\n  describe('actualizarProducto', function () {\n    it('debería actualizar un producto correctamente', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var mockProducto, stubActualizarProducto;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            mockProducto = {\n              id: 1,\n              nombre: 'Producto Actualizado'\n            };\n            stubActualizarProducto = _sinon[\"default\"].stub(_productoModel[\"default\"], 'actualizarProducto').resolves(mockProducto);\n            req.params.id = 1;\n            req.body = {\n              nombre: 'Producto Actualizado'\n            };\n            _context5.next = 6;\n            return _productoController[\"default\"].actualizarProducto(req, res, next);\n          case 6:\n            expect(stubActualizarProducto.calledOnce).to.be[\"true\"];\n            expect(res.json.calledWith({\n              producto: mockProducto,\n              mensaje: 'Producto actualizado exitosamente'\n            })).to.be[\"true\"];\n            stubActualizarProducto.restore();\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    })));\n    it('debería manejar errores al actualizar un producto', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var stubActualizarProducto;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            stubActualizarProducto = _sinon[\"default\"].stub(_productoModel[\"default\"], 'actualizarProducto').rejects(new Error('Error de base de datos'));\n            _context6.next = 3;\n            return _productoController[\"default\"].actualizarProducto(req, res, next);\n          case 3:\n            expect(res.status.calledWith(500)).to.be[\"true\"];\n            expect(res.json.calledWith({\n              mensaje: 'Error al actualizar el producto'\n            })).to.be[\"true\"];\n            stubActualizarProducto.restore();\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    })));\n  });\n\n  // Test para el método \"eliminarProducto\"\n  describe('eliminarProducto', function () {\n    it('debería eliminar un producto correctamente', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var stubEliminarProducto;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            stubEliminarProducto = _sinon[\"default\"].stub(_productoModel[\"default\"], 'eliminarProducto').resolves();\n            req.params.id = 1;\n            _context7.next = 4;\n            return _productoController[\"default\"].eliminarProducto(req, res, next);\n          case 4:\n            expect(stubEliminarProducto.calledOnce).to.be[\"true\"];\n            expect(res.json.calledWith({\n              mensaje: 'Producto eliminado exitosamente'\n            })).to.be[\"true\"];\n            stubEliminarProducto.restore();\n          case 7:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    })));\n    it('debería manejar errores al eliminar un producto', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n      var stubEliminarProducto;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            stubEliminarProducto = _sinon[\"default\"].stub(_productoModel[\"default\"], 'eliminarProducto').rejects(new Error('Error de base de datos'));\n            _context8.next = 3;\n            return _productoController[\"default\"].eliminarProducto(req, res, next);\n          case 3:\n            expect(res.status.calledWith(500)).to.be[\"true\"];\n            expect(res.json.calledWith({\n              mensaje: 'Error al eliminar el producto'\n            })).to.be[\"true\"];\n            stubEliminarProducto.restore();\n          case 6:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    })));\n  });\n\n  // Test para el método \"listarProductos\"\n  describe('listarProductos', function () {\n    it('debería listar todos los productos correctamente', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n      var mockProductos, stubListarProductos;\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            mockProductos = [{\n              id: 1,\n              nombre: 'Producto 1'\n            }, {\n              id: 2,\n              nombre: 'Producto 2'\n            }];\n            stubListarProductos = _sinon[\"default\"].stub(_productoModel[\"default\"], 'listarProductos').resolves(mockProductos);\n            _context9.next = 4;\n            return _productoController[\"default\"].listarProductos(req, res, next);\n          case 4:\n            expect(stubListarProductos.calledOnce).to.be[\"true\"];\n            expect(res.json.calledWith(mockProductos)).to.be[\"true\"];\n            stubListarProductos.restore();\n          case 7:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9);\n    })));\n    it('debería manejar errores al listar los productos', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n      var stubListarProductos;\n      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            stubListarProductos = _sinon[\"default\"].stub(_productoModel[\"default\"], 'listarProductos').rejects(new Error('Error de base de datos'));\n            _context10.next = 3;\n            return _productoController[\"default\"].listarProductos(req, res, next);\n          case 3:\n            expect(res.status.calledWith(500)).to.be[\"true\"];\n            expect(res.json.calledWith({\n              mensaje: 'Error al listar los productos'\n            })).to.be[\"true\"];\n            stubListarProductos.restore();\n          case 6:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, _callee10);\n    })));\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_chai","_interopRequireDefault","require","_sinon","_chaiHttp","_app","_productoController","_productoModel","e","__esModule","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","expect","chai","use","chaiHttp","describe","req","res","beforeEach","body","params","status","sinon","stub","returnsThis","json","send","spy","it","_callee","mockProducto","stubCrearProducto","_callee$","_context","id","nombre","ProductoFactory","resolves","descripcion","productoController","crearProducto","calledOnce","to","be","calledWith","producto","mensaje","restore","_callee2","_callee2$","_context2","rejects","_callee3","stubObtenerProducto","_callee3$","_context3","obtenerProducto","_callee4","_callee4$","_context4","_callee5","stubActualizarProducto","_callee5$","_context5","actualizarProducto","_callee6","_callee6$","_context6","_callee7","stubEliminarProducto","_callee7$","_context7","eliminarProducto","_callee8","_callee8$","_context8","_callee9","mockProductos","stubListarProductos","_callee9$","_context9","listarProductos","_callee10","_callee10$","_context10"],"sourceRoot":"C:\\Users\\MANUEL\\Desktop\\Ajpop\\8vo Semestre\\Progra Comercial\\crudFactory\\producto-crud-mvc-api\\test\\","sources":["productoController.test.js"],"sourcesContent":["import chai from 'chai';\r\nimport sinon from 'sinon';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../app'; // Asegúrate de que apunta a tu app de Express\r\nimport productoController from '../src/controllers/productoController';\r\nimport ProductoFactory from '../src/models/productoModel';\r\n\r\nconst { expect } = chai; // Esta es la forma correcta de desestructurar 'expect'\r\n\r\nchai.use(chaiHttp); // Asegúrate de usar chaiHttp si estás haciendo pruebas HTTP\r\n\r\ndescribe('Producto Controller', () => {\r\n  let req, res, next;\r\n\r\n  beforeEach(() => {\r\n    req = {\r\n      body: {},\r\n      params: {}\r\n    };\r\n    res = {\r\n      status: sinon.stub().returnsThis(),\r\n      json: sinon.stub().returnsThis(),\r\n      send: sinon.stub().returnsThis()\r\n    };\r\n    next = sinon.spy();\r\n  });\r\n\r\n  // Test para el método \"crearProducto\"\r\n  describe('crearProducto', () => {\r\n    it('debería crear un producto correctamente', async () => {\r\n      const mockProducto = { id: 1, nombre: 'Producto Test'};\r\n\r\n      const stubCrearProducto = sinon.stub(ProductoFactory, 'crearProducto').resolves(mockProducto);\r\n      req.body = { nombre: 'Producto Test', descripcion: 'Desc Test' }; // Cambiar según los datos esperados\r\n\r\n      await productoController.crearProducto(req, res, next);\r\n\r\n      expect(stubCrearProducto.calledOnce).to.be.true;\r\n      expect(res.status.calledWith(201)).to.be.true;\r\n      expect(res.json.calledWith({ producto: mockProducto, mensaje: 'Producto creado exitosamente' })).to.be.true;\r\n\r\n      stubCrearProducto.restore();\r\n    });\r\n\r\n    it('debería manejar errores al crear un producto', async () => {\r\n      const stubCrearProducto = sinon.stub(ProductoFactory, 'crearProducto').rejects(new Error('Error de base de datos'));\r\n      \r\n      await productoController.crearProducto(req, res, next);\r\n      \r\n      expect(res.status.calledWith(500)).to.be.true;\r\n      expect(res.json.calledWith({ mensaje: 'Error al crear el producto' })).to.be.true;\r\n      \r\n      stubCrearProducto.restore();\r\n    });\r\n  });\r\n\r\n  // Test para el método \"obtenerProducto\"\r\n  describe('obtenerProducto', () => {\r\n    it('debería obtener un producto correctamente', async () => {\r\n      const mockProducto = { id: 1, nombre: 'Producto Test'};\r\n      const stubObtenerProducto = sinon.stub(ProductoFactory, 'obtenerProducto').resolves(mockProducto);\r\n      req.params.id = 1;\r\n\r\n      await productoController.obtenerProducto(req, res, next);\r\n\r\n      expect(stubObtenerProducto.calledOnce).to.be.true;\r\n      expect(res.json.calledWith(mockProducto)).to.be.true;\r\n\r\n      stubObtenerProducto.restore();\r\n    });\r\n\r\n    it('debería manejar producto no encontrado', async () => {\r\n      const stubObtenerProducto = sinon.stub(ProductoFactory, 'obtenerProducto').resolves(null);\r\n      req.params.id = 999;\r\n\r\n      await productoController.obtenerProducto(req, res, next);\r\n\r\n      expect(res.status.calledWith(404)).to.be.true;\r\n      expect(res.json.calledWith({ mensaje: 'Producto no encontrado' })).to.be.true;\r\n\r\n      stubObtenerProducto.restore();\r\n    });\r\n  });\r\n\r\n  // Test para el método \"actualizarProducto\"\r\n  describe('actualizarProducto', () => {\r\n    it('debería actualizar un producto correctamente', async () => {\r\n      const mockProducto = { id: 1, nombre: 'Producto Actualizado'};\r\n      const stubActualizarProducto = sinon.stub(ProductoFactory, 'actualizarProducto').resolves(mockProducto);\r\n      req.params.id = 1;\r\n      req.body = { nombre: 'Producto Actualizado' };\r\n\r\n      await productoController.actualizarProducto(req, res, next);\r\n\r\n      expect(stubActualizarProducto.calledOnce).to.be.true;\r\n      expect(res.json.calledWith({ producto: mockProducto, mensaje: 'Producto actualizado exitosamente' })).to.be.true;\r\n\r\n      stubActualizarProducto.restore();\r\n    });\r\n\r\n    it('debería manejar errores al actualizar un producto', async () => {\r\n      const stubActualizarProducto = sinon.stub(ProductoFactory, 'actualizarProducto').rejects(new Error('Error de base de datos'));\r\n      \r\n      await productoController.actualizarProducto(req, res, next);\r\n      \r\n      expect(res.status.calledWith(500)).to.be.true;\r\n      expect(res.json.calledWith({ mensaje: 'Error al actualizar el producto' })).to.be.true;\r\n      \r\n      stubActualizarProducto.restore();\r\n    });\r\n  });\r\n\r\n  // Test para el método \"eliminarProducto\"\r\n  describe('eliminarProducto', () => {\r\n    it('debería eliminar un producto correctamente', async () => {\r\n      const stubEliminarProducto = sinon.stub(ProductoFactory, 'eliminarProducto').resolves();\r\n      req.params.id = 1;\r\n\r\n      await productoController.eliminarProducto(req, res, next);\r\n\r\n      expect(stubEliminarProducto.calledOnce).to.be.true;\r\n      expect(res.json.calledWith({ mensaje: 'Producto eliminado exitosamente' })).to.be.true;\r\n\r\n      stubEliminarProducto.restore();\r\n    });\r\n\r\n    it('debería manejar errores al eliminar un producto', async () => {\r\n      const stubEliminarProducto = sinon.stub(ProductoFactory, 'eliminarProducto').rejects(new Error('Error de base de datos'));\r\n      \r\n      await productoController.eliminarProducto(req, res, next);\r\n      \r\n      expect(res.status.calledWith(500)).to.be.true;\r\n      expect(res.json.calledWith({ mensaje: 'Error al eliminar el producto' })).to.be.true;\r\n      \r\n      stubEliminarProducto.restore();\r\n    });\r\n  });\r\n\r\n  // Test para el método \"listarProductos\"\r\n  describe('listarProductos', () => {\r\n    it('debería listar todos los productos correctamente', async () => {\r\n      const mockProductos = [{ id: 1, nombre: 'Producto 1' }, { id: 2, nombre: 'Producto 2' }];\r\n      const stubListarProductos = sinon.stub(ProductoFactory, 'listarProductos').resolves(mockProductos);\r\n\r\n      await productoController.listarProductos(req, res, next);\r\n\r\n      expect(stubListarProductos.calledOnce).to.be.true;\r\n      expect(res.json.calledWith(mockProductos)).to.be.true;\r\n\r\n      stubListarProductos.restore();\r\n    });\r\n\r\n    it('debería manejar errores al listar los productos', async () => {\r\n      const stubListarProductos = sinon.stub(ProductoFactory, 'listarProductos').rejects(new Error('Error de base de datos'));\r\n      \r\n      await productoController.listarProductos(req, res, next);\r\n      \r\n      expect(res.status.calledWith(500)).to.be.true;\r\n      expect(res.json.calledWith({ mensaje: 'Error al listar los productos' })).to.be.true;\r\n      \r\n      stubListarProductos.restore();\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1727461873718},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\MANUEL\\\\Desktop\\\\Ajpop\\\\8vo Semestre\\\\Progra Comercial\\\\crudFactory\\\\producto-crud-mvc-api\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\MANUEL\\\\Desktop\\\\Ajpop\\\\8vo Semestre\\\\Progra Comercial\\\\crudFactory\\\\producto-crud-mvc-api\",\"filename\":\"C:\\\\Users\\\\MANUEL\\\\Desktop\\\\Ajpop\\\\8vo Semestre\\\\Progra Comercial\\\\crudFactory\\\\producto-crud-mvc-api\\\\test\\\\productoController.test.cjs\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\MANUEL\\\\Desktop\\\\Ajpop\\\\8vo Semestre\\\\Progra Comercial\\\\crudFactory\\\\producto-crud-mvc-api\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.25.2:development":{"value":{"code":"\"use strict\";\n\nvar chai = _interopRequireWildcard(require(\"chai\"));\nvar _sinon = _interopRequireDefault(require(\"sinon\"));\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { \"default\": e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nvar app = (await Promise.resolve().then(function () {\n  return _interopRequireWildcard(require('../src/server.js'));\n}))[\"default\"];\nvar productoController = (await Promise.resolve().then(function () {\n  return _interopRequireWildcard(require('../src/controllers/productoController.js'));\n}))[\"default\"];\nvar ProductoFactory = (await Promise.resolve().then(function () {\n  return _interopRequireWildcard(require('../src/models/productoModel.js'));\n}))[\"default\"];\nvar expect = chai.expect;\nchai.use(_chaiHttp[\"default\"]);\ndescribe('Producto Controller', function () {\n  var req, res, next;\n  beforeEach(function () {\n    req = {\n      body: {},\n      params: {}\n    };\n    res = {\n      status: _sinon[\"default\"].stub().returnsThis(),\n      json: _sinon[\"default\"].stub().returnsThis(),\n      send: _sinon[\"default\"].stub().returnsThis()\n    };\n    next = _sinon[\"default\"].spy();\n  });\n\n  // Test para el método \"crearProducto\"\n  describe('crearProducto', function () {\n    it('debería crear un producto correctamente', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var mockProducto, stubCrearProducto;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            mockProducto = {\n              id: 1,\n              nombre: 'Producto Test'\n            };\n            stubCrearProducto = _sinon[\"default\"].stub(ProductoFactory, 'crearProducto').resolves(mockProducto);\n            req.body = {\n              nombre: 'Producto Test',\n              descripcion: 'Desc Test'\n            };\n            _context.next = 5;\n            return productoController.crearProducto(req, res, next);\n          case 5:\n            expect(stubCrearProducto.calledOnce).to.be[\"true\"];\n            expect(res.status.calledWith(201)).to.be[\"true\"];\n            expect(res.json.calledWith({\n              producto: mockProducto,\n              mensaje: 'Producto creado exitosamente'\n            })).to.be[\"true\"];\n            stubCrearProducto.restore();\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    it('debería manejar errores al crear un producto', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var stubCrearProducto;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            stubCrearProducto = _sinon[\"default\"].stub(ProductoFactory, 'crearProducto').rejects(new Error('Error de base de datos'));\n            _context2.next = 3;\n            return productoController.crearProducto(req, res, next);\n          case 3:\n            expect(res.status.calledWith(500)).to.be[\"true\"];\n            expect(res.json.calledWith({\n              mensaje: 'Error al crear el producto'\n            })).to.be[\"true\"];\n            stubCrearProducto.restore();\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    })));\n  });\n\n  // Test para el método \"obtenerProducto\"\n  describe('obtenerProducto', function () {\n    it('debería obtener un producto correctamente', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var mockProducto, stubObtenerProducto;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            mockProducto = {\n              id: 1,\n              nombre: 'Producto Test'\n            };\n            stubObtenerProducto = _sinon[\"default\"].stub(ProductoFactory, 'obtenerProducto').resolves(mockProducto);\n            req.params.id = 1;\n            _context3.next = 5;\n            return productoController.obtenerProducto(req, res, next);\n          case 5:\n            expect(stubObtenerProducto.calledOnce).to.be[\"true\"];\n            expect(res.json.calledWith(mockProducto)).to.be[\"true\"];\n            stubObtenerProducto.restore();\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    })));\n    it('debería manejar producto no encontrado', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var stubObtenerProducto;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            stubObtenerProducto = _sinon[\"default\"].stub(ProductoFactory, 'obtenerProducto').resolves(null);\n            req.params.id = 999;\n            _context4.next = 4;\n            return productoController.obtenerProducto(req, res, next);\n          case 4:\n            expect(res.status.calledWith(404)).to.be[\"true\"];\n            expect(res.json.calledWith({\n              mensaje: 'Producto no encontrado'\n            })).to.be[\"true\"];\n            stubObtenerProducto.restore();\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    })));\n  });\n\n  // Test para el método \"actualizarProducto\"\n  describe('actualizarProducto', function () {\n    it('debería actualizar un producto correctamente', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var mockProducto, stubActualizarProducto;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            mockProducto = {\n              id: 1,\n              nombre: 'Producto Actualizado'\n            };\n            stubActualizarProducto = _sinon[\"default\"].stub(ProductoFactory, 'actualizarProducto').resolves(mockProducto);\n            req.params.id = 1;\n            req.body = {\n              nombre: 'Producto Actualizado'\n            };\n            _context5.next = 6;\n            return productoController.actualizarProducto(req, res, next);\n          case 6:\n            expect(stubActualizarProducto.calledOnce).to.be[\"true\"];\n            expect(res.json.calledWith({\n              producto: mockProducto,\n              mensaje: 'Producto actualizado exitosamente'\n            })).to.be[\"true\"];\n            stubActualizarProducto.restore();\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    })));\n    it('debería manejar errores al actualizar un producto', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var stubActualizarProducto;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            stubActualizarProducto = _sinon[\"default\"].stub(ProductoFactory, 'actualizarProducto').rejects(new Error('Error de base de datos'));\n            _context6.next = 3;\n            return productoController.actualizarProducto(req, res, next);\n          case 3:\n            expect(res.status.calledWith(500)).to.be[\"true\"];\n            expect(res.json.calledWith({\n              mensaje: 'Error al actualizar el producto'\n            })).to.be[\"true\"];\n            stubActualizarProducto.restore();\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    })));\n  });\n\n  // Test para el método \"eliminarProducto\"\n  describe('eliminarProducto', function () {\n    it('debería eliminar un producto correctamente', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var stubEliminarProducto;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            stubEliminarProducto = _sinon[\"default\"].stub(ProductoFactory, 'eliminarProducto').resolves();\n            req.params.id = 1;\n            _context7.next = 4;\n            return productoController.eliminarProducto(req, res, next);\n          case 4:\n            expect(stubEliminarProducto.calledOnce).to.be[\"true\"];\n            expect(res.json.calledWith({\n              mensaje: 'Producto eliminado exitosamente'\n            })).to.be[\"true\"];\n            stubEliminarProducto.restore();\n          case 7:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    })));\n    it('debería manejar errores al eliminar un producto', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n      var stubEliminarProducto;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            stubEliminarProducto = _sinon[\"default\"].stub(ProductoFactory, 'eliminarProducto').rejects(new Error('Error de base de datos'));\n            _context8.next = 3;\n            return productoController.eliminarProducto(req, res, next);\n          case 3:\n            expect(res.status.calledWith(500)).to.be[\"true\"];\n            expect(res.json.calledWith({\n              mensaje: 'Error al eliminar el producto'\n            })).to.be[\"true\"];\n            stubEliminarProducto.restore();\n          case 6:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    })));\n  });\n\n  // Test para el método \"listarProductos\"\n  describe('listarProductos', function () {\n    it('debería listar todos los productos correctamente', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n      var mockProductos, stubListarProductos;\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            mockProductos = [{\n              id: 1,\n              nombre: 'Producto 1'\n            }, {\n              id: 2,\n              nombre: 'Producto 2'\n            }];\n            stubListarProductos = _sinon[\"default\"].stub(ProductoFactory, 'listarProductos').resolves(mockProductos);\n            _context9.next = 4;\n            return productoController.listarProductos(req, res, next);\n          case 4:\n            expect(stubListarProductos.calledOnce).to.be[\"true\"];\n            expect(res.json.calledWith(mockProductos)).to.be[\"true\"];\n            stubListarProductos.restore();\n          case 7:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9);\n    })));\n    it('debería manejar errores al listar los productos', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n      var stubListarProductos;\n      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            stubListarProductos = _sinon[\"default\"].stub(ProductoFactory, 'listarProductos').rejects(new Error('Error de base de datos'));\n            _context10.next = 3;\n            return productoController.listarProductos(req, res, next);\n          case 3:\n            expect(res.status.calledWith(500)).to.be[\"true\"];\n            expect(res.json.calledWith({\n              mensaje: 'Error al listar los productos'\n            })).to.be[\"true\"];\n            stubListarProductos.restore();\n          case 6:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, _callee10);\n    })));\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["chai","_interopRequireWildcard","require","_sinon","_interopRequireDefault","_chaiHttp","e","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_getRequireWildcardCache","WeakMap","has","get","getOwnPropertyDescriptor","set","app","productoController","ProductoFactory","expect","use","chaiHttp","describe","req","res","beforeEach","body","params","status","sinon","stub","returnsThis","json","send","spy","it","_callee","mockProducto","stubCrearProducto","_callee$","_context","id","nombre","resolves","descripcion","crearProducto","calledOnce","to","be","calledWith","producto","mensaje","restore","_callee2","_callee2$","_context2","rejects","_callee3","stubObtenerProducto","_callee3$","_context3","obtenerProducto","_callee4","_callee4$","_context4","_callee5","stubActualizarProducto","_callee5$","_context5","actualizarProducto","_callee6","_callee6$","_context6","_callee7","stubEliminarProducto","_callee7$","_context7","eliminarProducto","_callee8","_callee8$","_context8","_callee9","mockProductos","stubListarProductos","_callee9$","_context9","listarProductos","_callee10","_callee10$","_context10"],"sourceRoot":"C:\\Users\\MANUEL\\Desktop\\Ajpop\\8vo Semestre\\Progra Comercial\\crudFactory\\producto-crud-mvc-api\\test\\","sources":["productoController.test.cjs"],"sourcesContent":["import * as chai from 'chai';\r\nimport sinon from 'sinon';\r\nimport chaiHttp from 'chai-http';\r\n\r\nconst app = (await import('../src/server.js')).default;\r\nconst productoController = (await import('../src/controllers/productoController.js')).default;\r\nconst ProductoFactory = (await import('../src/models/productoModel.js')).default;\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\ndescribe('Producto Controller', () => {\r\n  let req, res, next;\r\n\r\n  beforeEach(() => {\r\n    req = {\r\n      body: {},\r\n      params: {}\r\n    };\r\n    res = {\r\n      status: sinon.stub().returnsThis(),\r\n      json: sinon.stub().returnsThis(),\r\n      send: sinon.stub().returnsThis()\r\n    };\r\n    next = sinon.spy();\r\n  });\r\n\r\n  // Test para el método \"crearProducto\"\r\n  describe('crearProducto', () => {\r\n    it('debería crear un producto correctamente', async () => {\r\n      const mockProducto = { id: 1, nombre: 'Producto Test' };\r\n\r\n      const stubCrearProducto = sinon.stub(ProductoFactory, 'crearProducto').resolves(mockProducto);\r\n      req.body = { nombre: 'Producto Test', descripcion: 'Desc Test' };\r\n\r\n      await productoController.crearProducto(req, res, next);\r\n\r\n      expect(stubCrearProducto.calledOnce).to.be.true;\r\n      expect(res.status.calledWith(201)).to.be.true;\r\n      expect(res.json.calledWith({ producto: mockProducto, mensaje: 'Producto creado exitosamente' })).to.be.true;\r\n\r\n      stubCrearProducto.restore();\r\n    });\r\n\r\n    it('debería manejar errores al crear un producto', async () => {\r\n      const stubCrearProducto = sinon.stub(ProductoFactory, 'crearProducto').rejects(new Error('Error de base de datos'));\r\n      \r\n      await productoController.crearProducto(req, res, next);\r\n      \r\n      expect(res.status.calledWith(500)).to.be.true;\r\n      expect(res.json.calledWith({ mensaje: 'Error al crear el producto' })).to.be.true;\r\n      \r\n      stubCrearProducto.restore();\r\n    });\r\n  });\r\n\r\n  // Test para el método \"obtenerProducto\"\r\n  describe('obtenerProducto', () => {\r\n    it('debería obtener un producto correctamente', async () => {\r\n      const mockProducto = { id: 1, nombre: 'Producto Test' };\r\n      const stubObtenerProducto = sinon.stub(ProductoFactory, 'obtenerProducto').resolves(mockProducto);\r\n      req.params.id = 1;\r\n\r\n      await productoController.obtenerProducto(req, res, next);\r\n\r\n      expect(stubObtenerProducto.calledOnce).to.be.true;\r\n      expect(res.json.calledWith(mockProducto)).to.be.true;\r\n\r\n      stubObtenerProducto.restore();\r\n    });\r\n\r\n    it('debería manejar producto no encontrado', async () => {\r\n      const stubObtenerProducto = sinon.stub(ProductoFactory, 'obtenerProducto').resolves(null);\r\n      req.params.id = 999;\r\n\r\n      await productoController.obtenerProducto(req, res, next);\r\n\r\n      expect(res.status.calledWith(404)).to.be.true;\r\n      expect(res.json.calledWith({ mensaje: 'Producto no encontrado' })).to.be.true;\r\n\r\n      stubObtenerProducto.restore();\r\n    });\r\n  });\r\n\r\n  // Test para el método \"actualizarProducto\"\r\n  describe('actualizarProducto', () => {\r\n    it('debería actualizar un producto correctamente', async () => {\r\n      const mockProducto = { id: 1, nombre: 'Producto Actualizado' };\r\n      const stubActualizarProducto = sinon.stub(ProductoFactory, 'actualizarProducto').resolves(mockProducto);\r\n      req.params.id = 1;\r\n      req.body = { nombre: 'Producto Actualizado' };\r\n\r\n      await productoController.actualizarProducto(req, res, next);\r\n\r\n      expect(stubActualizarProducto.calledOnce).to.be.true;\r\n      expect(res.json.calledWith({ producto: mockProducto, mensaje: 'Producto actualizado exitosamente' })).to.be.true;\r\n\r\n      stubActualizarProducto.restore();\r\n    });\r\n\r\n    it('debería manejar errores al actualizar un producto', async () => {\r\n      const stubActualizarProducto = sinon.stub(ProductoFactory, 'actualizarProducto').rejects(new Error('Error de base de datos'));\r\n      \r\n      await productoController.actualizarProducto(req, res, next);\r\n      \r\n      expect(res.status.calledWith(500)).to.be.true;\r\n      expect(res.json.calledWith({ mensaje: 'Error al actualizar el producto' })).to.be.true;\r\n      \r\n      stubActualizarProducto.restore();\r\n    });\r\n  });\r\n\r\n  // Test para el método \"eliminarProducto\"\r\n  describe('eliminarProducto', () => {\r\n    it('debería eliminar un producto correctamente', async () => {\r\n      const stubEliminarProducto = sinon.stub(ProductoFactory, 'eliminarProducto').resolves();\r\n      req.params.id = 1;\r\n\r\n      await productoController.eliminarProducto(req, res, next);\r\n\r\n      expect(stubEliminarProducto.calledOnce).to.be.true;\r\n      expect(res.json.calledWith({ mensaje: 'Producto eliminado exitosamente' })).to.be.true;\r\n\r\n      stubEliminarProducto.restore();\r\n    });\r\n\r\n    it('debería manejar errores al eliminar un producto', async () => {\r\n      const stubEliminarProducto = sinon.stub(ProductoFactory, 'eliminarProducto').rejects(new Error('Error de base de datos'));\r\n      \r\n      await productoController.eliminarProducto(req, res, next);\r\n      \r\n      expect(res.status.calledWith(500)).to.be.true;\r\n      expect(res.json.calledWith({ mensaje: 'Error al eliminar el producto' })).to.be.true;\r\n      \r\n      stubEliminarProducto.restore();\r\n    });\r\n  });\r\n\r\n  // Test para el método \"listarProductos\"\r\n  describe('listarProductos', () => {\r\n    it('debería listar todos los productos correctamente', async () => {\r\n      const mockProductos = [{ id: 1, nombre: 'Producto 1' }, { id: 2, nombre: 'Producto 2' }];\r\n      const stubListarProductos = sinon.stub(ProductoFactory, 'listarProductos').resolves(mockProductos);\r\n\r\n      await productoController.listarProductos(req, res, next);\r\n\r\n      expect(stubListarProductos.calledOnce).to.be.true;\r\n      expect(res.json.calledWith(mockProductos)).to.be.true;\r\n\r\n      stubListarProductos.restore();\r\n    });\r\n\r\n    it('debería manejar errores al listar los productos', async () => {\r\n      const stubListarProductos = sinon.stub(ProductoFactory, 'listarProductos').rejects(new Error('Error de base de datos'));\r\n      \r\n      await productoController.listarProductos(req, res, next);\r\n      \r\n      expect(res.status.calledWith(500)).to.be.true;\r\n      expect(res.json.calledWith({ mensaje: 'Error al listar los productos' })).to.be.true;\r\n      \r\n      stubListarProductos.restore();\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1727462474408}}